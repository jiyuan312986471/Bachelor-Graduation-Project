
FUNC void Setup (void) {
	_WDWORD(0x400FC0C4, _RDWORD(0x400FC0C4) | 0x800);   // Enable EMC Power

	_WDWORD(0x4002C180, 0x00000201);   // Set P3.0 to EMC_D0
	_WDWORD(0x4002C184, 0x00000201);   // Set P3.1 to EMC_D1
	_WDWORD(0x4002C188, 0x00000201);   // Set P3.2 to EMC_D2
	_WDWORD(0x4002C18C, 0x00000201);   // Set P3.3 to EMC_D3

	_WDWORD(0x4002C190, 0x00000201);   // Set P3.4 to EMC_D4
	_WDWORD(0x4002C194, 0x00000201);   // Set P3.5 to EMC_D5
	_WDWORD(0x4002C198, 0x00000201);   // Set P3.6 to EMC_D6
	_WDWORD(0x4002C19C, 0x00000201);   // Set P3.7 to EMC_D7

	_WDWORD(0x4002C1A0, 0x00000201);   // Set P3.8 to EMC_D8
	_WDWORD(0x4002C1A4, 0x00000201);   // Set P3.9 to EMC_D9
	_WDWORD(0x4002C1A8, 0x00000201);   // Set P3.10 to EMC_D10
	_WDWORD(0x4002C1AC, 0x00000201);   // Set P3.11 to EMC_D11

	_WDWORD(0x4002C1B0, 0x00000201);   // Set P3.12 to EMC_D12
	_WDWORD(0x4002C1B4, 0x00000201);   // Set P3.13 to EMC_D13
	_WDWORD(0x4002C1B8, 0x00000201);   // Set P3.14 to EMC_D14
	_WDWORD(0x4002C1BC, 0x00000201);   // Set P3.15 to EMC_D15

	_WDWORD(0x4002C1C0, 0x00000201);   // Set P3.16 to EMC_D16
	_WDWORD(0x4002C1C4, 0x00000201);   // Set P3.17 to EMC_D17
	_WDWORD(0x4002C1C8, 0x00000201);   // Set P3.18 to EMC_D18
	_WDWORD(0x4002C1CC, 0x00000201);   // Set P3.19 to EMC_D19

	_WDWORD(0x4002C1D0, 0x00000201);   // Set P3.20 to EMC_D20
	_WDWORD(0x4002C1D4, 0x00000201);   // Set P3.21 to EMC_D21
	_WDWORD(0x4002C1D8, 0x00000201);   // Set P3.22 to EMC_D22
	_WDWORD(0x4002C1DC, 0x00000201);   // Set P3.23 to EMC_D23

	_WDWORD(0x4002C1E0, 0x00000201);   // Set P3.24 to EMC_D24
	_WDWORD(0x4002C1E4, 0x00000201);   // Set P3.25 to EMC_D25
	_WDWORD(0x4002C1E8, 0x00000201);   // Set P3.26 to EMC_D26
	_WDWORD(0x4002C1EC, 0x00000201);   // Set P3.27 to EMC_D27

	_WDWORD(0x4002C1F0, 0x00000201);   // Set P3.28 to EMC_D28
	_WDWORD(0x4002C1F4, 0x00000201);   // Set P3.29 to EMC_D29
	_WDWORD(0x4002C1F8, 0x00000201);   // Set P3.30 to EMC_D30
	_WDWORD(0x4002C1FC, 0x00000201);   // Set P3.31 to EMC_D31

	_WDWORD(0x4002C200, 0x00000201);   // Set P4.0 to EMC_A0
	_WDWORD(0x4002C204, 0x00000201);   // Set P4.1 to EMC_A1
	_WDWORD(0x4002C208, 0x00000201);   // Set P4.2 to EMC_A2
	_WDWORD(0x4002C20C, 0x00000201);   // Set P4.3 to EMC_A3

	_WDWORD(0x4002C210, 0x00000201);   // Set P4.4 to EMC_A4
	_WDWORD(0x4002C214, 0x00000201);   // Set P4.5 to EMC_A5
	_WDWORD(0x4002C218, 0x00000201);   // Set P4.6 to EMC_A6
	_WDWORD(0x4002C21C, 0x00000201);   // Set P4.7 to EMC_A7

	_WDWORD(0x4002C220, 0x00000201);   // Set P4.8 to EMC_A8
	_WDWORD(0x4002C224, 0x00000201);   // Set P4.9 to EMC_A9
	_WDWORD(0x4002C228, 0x00000201);   // Set P4.10 to EMC_A10
	_WDWORD(0x4002C22C, 0x00000201);   // Set P4.11 to EMC_A11

	_WDWORD(0x4002C230, 0x00000201);   // Set P4.12 to EMC_A12
	_WDWORD(0x4002C234, 0x00000201);   // Set P4.13 to EMC_A13
	_WDWORD(0x4002C238, 0x00000201);   // Set P4.14 to EMC_A14
	_WDWORD(0x4002C23C, 0x00000201);   // Set P4.15 to EMC_A15

	_WDWORD(0x4002C240, 0x00000201);   // Set P4.16 to EMC_A16
	_WDWORD(0x4002C244, 0x00000201);   // Set P4.17 to EMC_A17
	_WDWORD(0x4002C248, 0x00000201);   // Set P4.18 to EMC_A18
	_WDWORD(0x4002C24C, 0x00000201);   // Set P4.19 to EMC_A19

	_WDWORD(0x4002C250, 0x00000201);   // Set P4.20 to EMC_A20
	_WDWORD(0x4002C254, 0x00000201);   // Set P4.21 to EMC_A21
	_WDWORD(0x4002C258, 0x00000201);   // Set P4.22 to EMC_A22
	_WDWORD(0x4002C25C, 0x00000201);   // Set P4.23 to EMC_A23

	_WDWORD(0x4002C260, 0x00000201);   // Set P4.24 to EMC_OE
	_WDWORD(0x4002C264, 0x00000201);   // Set P4.25 to EMC_WE
	_WDWORD(0x4002C268, 0x00000201);   // Set P4.26 to EMC_BLS0
	_WDWORD(0x4002C26C, 0x00000201);   // Set P4.27 to EMC_BLS1

	_WDWORD(0x4002C270, 0x00000201);   // Set P4.24 to EMC_BLS2
	_WDWORD(0x4002C274, 0x00000201);   // Set P4.25 to EMC_BLS3
	_WDWORD(0x4002C278, 0x00000201);   // Set P4.26 to EMC_CS0
	_WDWORD(0x4002C27C, 0x00000201);   // Set P4.27 to EMC_CS1

//	_WDWORD(0x4002C138, 0x00000201);   // Set P2.14 to EMC_CS2
//	_WDWORD(0x4002C13C, 0x00000201);   // Set P2.15 to EMC_CS3

	_WDWORD(0x2009C200, 0x00000081);   // Set EMCStaticConfig0
	_WDWORD(0x2009C204, 0x00000000);   // Set StaticWaitWen0 = ( n + 1 ) -> 1 clock cycles
	_WDWORD(0x2009C208, 0x00000000);   // Set StaticWaitOen0 = ( n ) -> 0 clock cycles
	_WDWORD(0x2009C20C, 0x00000006);   // Set StaticWaitRd0 = ( n + 1 ) -> 7 clock cycles
	_WDWORD(0x2009C210, 0x00000000);   // Set StaticWaitPage0 = ( n + 1 ) -> 1 clock cycles
	_WDWORD(0x2009C214, 0x00000005);   // Set StaticWaitWr0 = ( n + 2 ) -> 7 clock cycles
	_WDWORD(0x2009C218, 0x00000000);   // Set StaticWaitTurn0 = ( n + 1 ) -> 1 clock cycles

	_WDWORD(0x2009C220, 0x00000081);   // Set EMCStaticConfig1
	_WDWORD(0x2009C224, 0x00000000);   // Set StaticWaitWen1 = ( n + 1 ) -> 1 clock cycles
	_WDWORD(0x2009C228, 0x00000000);   // Set StaticWaitOen1 = ( n ) -> 0 clock cycles
	_WDWORD(0x2009C22C, 0x00000006);   // Set StaticWaitRd1 = ( n + 1 ) -> 7 clock cycles
	_WDWORD(0x2009C230, 0x00000000);   // Set StaticWaitPage1 = ( n + 1 ) -> 1 clock cycles
	_WDWORD(0x2009C234, 0x00000005);   // Set StaticWaitWr1 = ( n + 2 ) -> 7 clock cycles
	_WDWORD(0x2009C238, 0x00000000);   // Set StaticWaitTurn1 = ( n + 1 ) -> 1 clock cycles

//	_WDWORD(0x2009C240, 0x00000081);   // Set EMCStaticConfig2
//	_WDWORD(0x2009C244, 0x00000000);   // Set StaticWaitWen2 = ( n + 1 ) -> 1 clock cycles
//	_WDWORD(0x2009C248, 0x00000000);   // Set StaticWaitOen2 = ( n ) -> 0 clock cycles
//	_WDWORD(0x2009C24C, 0x00000006);   // Set StaticWaitRd2 = ( n + 1 ) -> 7 clock cycles
//	_WDWORD(0x2009C250, 0x00000000);   // Set StaticWaitPage2 = ( n + 1 ) -> 1 clock cycles
//	_WDWORD(0x2009C254, 0x00000005);   // Set StaticWaitWr2 = ( n + 2 ) -> 7 clock cycles
//	_WDWORD(0x2009C258, 0x00000000);   // Set StaticWaitTurn2 = ( n + 1 ) -> 1 clock cycles

//	_WDWORD(0x2009C260, 0x00000081);   // Set EMCStaticConfig3
//	_WDWORD(0x2009C264, 0x00000000);   // Set StaticWaitWen3 = ( n + 1 ) -> 1 clock cycles
//	_WDWORD(0x2009C268, 0x00000000);   // Set StaticWaitOen3 = ( n ) -> 0 clock cycles
//	_WDWORD(0x2009C26C, 0x00000006);   // Set StaticWaitRd3 = ( n + 1 ) -> 7 clock cycles
//	_WDWORD(0x2009C270, 0x00000000);   // Set StaticWaitPage3 = ( n + 1 ) -> 1 clock cycles
//	_WDWORD(0x2009C274, 0x00000005);   // Set StaticWaitWr3 = ( n + 2 ) -> 7 clock cycles
//	_WDWORD(0x2009C278, 0x00000000);   // Set StaticWaitTurn3 = ( n + 1 ) -> 1 clock cycles

//	PC = 0x80000000;
}

Setup();                             // Setup for Download
